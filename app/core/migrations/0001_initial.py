# Generated by Django 3.1.8 on 2021-04-19 16:01

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='XDSConfiguration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('target_xis_metadata_api', models.CharField(help_text='Enter the XIS api endpoint to query metadata', max_length=200)),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='XDSUIConfiguration',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('search_results_per_page', models.IntegerField(default=10, validators=[django.core.validators.MinValueValidator(1, 'results per page should be at least 1')])),
                ('course_img_fallback', models.ImageField(null=True, upload_to='images/')),
                ('xds_configuration', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='core.xdsconfiguration')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SearchSortOption',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('display_name', models.CharField(help_text='Enter the display name of the sorting option', max_length=200)),
                ('field_name', models.CharField(help_text='Enter the metadata field name as displayed in Elasticsearch e.g. course.title', max_length=200)),
                ('active', models.BooleanField(default=True)),
                ('xds_ui_configuration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='search_sort_options', to='core.xdsuiconfiguration')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SearchFilter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('display_name', models.CharField(help_text='Enter the display name of the field to filter on', max_length=200)),
                ('field_name', models.CharField(help_text='Enter the metadata field name as displayed in Elasticsearch e.g. course.title', max_length=200)),
                ('filter_type', models.CharField(choices=[('terms', 'Checkbox')], default='terms', max_length=200)),
                ('active', models.BooleanField(default=True)),
                ('xds_ui_configuration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.xdsuiconfiguration')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='CourseDetailHighlight',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('display_name', models.CharField(help_text='Enter the display name of the sorting option', max_length=200)),
                ('field_name', models.CharField(help_text='Enter the metadata field name as displayed in Elasticsearch e.g. course.title', max_length=200)),
                ('active', models.BooleanField(default=True)),
                ('highlight_icon', models.CharField(choices=[('clock', 'clock'), ('hourglass', 'hourglass'), ('user', 'user'), ('multi-users', 'multi-users'), ('location', 'location'), ('calendar', 'calendar')], default='user', max_length=200)),
                ('rank', models.IntegerField(default=1, help_text='Order in which highlight show on the course detail page (2 items per row)', validators=[django.core.validators.MinValueValidator(1, 'rank shoud be at least 1')])),
                ('xds_ui_configuration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='course_highlights', to='core.xdsuiconfiguration')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
